import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

export { getTypeEffectiveness, Effectiveness } from '@/features/battle/services/TypeEffectivenessService';

export function getResultPhrase(score: number, maxScore: number): string {
  // Clamp score between 0 and maxScore
  const s = Math.max(0, Math.min(score, maxScore));
  const phrases = [
    "Como un Magikarp haciendo Salpicadura...",
    "Fallaste mÃ¡s que un Hipnosis, pero lo importante es seguir.",
    "Un poco Slowpoke, Â¡pero irÃ¡s acelerando!",
    "No fuiste muy eficazâ€¦ pero hasta Pikachu necesitÃ³ entrenamiento",
    "Como un Zubat en una cueva: persistente, pero un poco perdido!",
    "Ni bien ni mal: tipo Normal. Pero eso tambiÃ©n tiene su encanto",
    "Â¡EstÃ¡s evolucionando! Â¡En breve serÃ¡s SUPER EFECTIVO!",
    "Â¡SerÃ­as un gran entrenador de Gimnasio!",
    "Â¡A la altura del Alto Mando!",
    "Â¡SÃºper eficaz! Solo te faltÃ³ un Caramelo Raro mÃ¡s",
    "Legendary! You caught'em all! ðŸŽ‰"
  ];
  // Use Math.round to map score to index (for non-integer scores)
  return phrases[Math.round((s / maxScore) * 10)] || "Keep battling!";
}
